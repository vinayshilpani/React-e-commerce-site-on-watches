{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', './windowOrGlobal'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('./windowOrGlobal'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.windowOrGlobal);\n    global.ScriptCache = mod.exports;\n  }\n})(this, function (exports, window) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var counter = 0;\n  var scriptMap = typeof window !== 'undefined' && window._scriptMap || new Map();\n\n  var ScriptCache = exports.ScriptCache = function (global) {\n    global._scriptMap = global._scriptMap || scriptMap;\n    return function ScriptCache(scripts) {\n      var Cache = {};\n\n      Cache._onLoad = function (key) {\n        return function (cb) {\n          var registered = true;\n\n          function unregister() {\n            registered = false;\n          }\n\n          var stored = scriptMap.get(key);\n\n          if (stored) {\n            stored.promise.then(function () {\n              if (registered) {\n                stored.error ? cb(stored.error) : cb(null, stored);\n              }\n\n              return stored;\n            }).catch(function (error) {\n              return cb(error);\n            });\n          } else {// TODO:\n          }\n\n          return unregister;\n        };\n      };\n\n      Cache._scriptTag = function (key, src) {\n        if (!scriptMap.has(key)) {\n          // Server side rendering environments don't always have access to the `document` global.\n          // In these cases, we're not going to be able to return a script tag, so just return null.\n          if (typeof document === 'undefined') return null;\n          var tag = document.createElement('script');\n          var promise = new Promise(function (resolve, reject) {\n            var body = document.getElementsByTagName('body')[0];\n            tag.type = 'text/javascript';\n            tag.async = false; // Load in order\n\n            var cbName = 'loaderCB' + counter++ + Date.now();\n            var cb = void 0;\n\n            var handleResult = function handleResult(state) {\n              return function (evt) {\n                var stored = scriptMap.get(key);\n\n                if (state === 'loaded') {\n                  stored.resolved = true;\n                  resolve(src); // stored.handlers.forEach(h => h.call(null, stored))\n                  // stored.handlers = []\n                } else if (state === 'error') {\n                  stored.errored = true; // stored.handlers.forEach(h => h.call(null, stored))\n                  // stored.handlers = [];\n\n                  reject(evt);\n                }\n\n                stored.loaded = true;\n                cleanup();\n              };\n            };\n\n            var cleanup = function cleanup() {\n              if (global[cbName] && typeof global[cbName] === 'function') {\n                global[cbName] = null;\n                delete global[cbName];\n              }\n            };\n\n            tag.onload = handleResult('loaded');\n            tag.onerror = handleResult('error');\n\n            tag.onreadystatechange = function () {\n              handleResult(tag.readyState);\n            }; // Pick off callback, if there is one\n\n\n            if (src.match(/callback=CALLBACK_NAME/)) {\n              src = src.replace(/(callback=)[^\\&]+/, '$1' + cbName);\n              cb = window[cbName] = tag.onload;\n            } else {\n              tag.addEventListener('load', tag.onload);\n            }\n\n            tag.addEventListener('error', tag.onerror);\n            tag.src = src;\n            body.appendChild(tag);\n            return tag;\n          });\n          var initialState = {\n            loaded: false,\n            error: false,\n            promise: promise,\n            tag: tag\n          };\n          scriptMap.set(key, initialState);\n        }\n\n        return scriptMap.get(key).tag;\n      }; // let scriptTags = document.querySelectorAll('script')\n      //\n      // NodeList.prototype.filter = Array.prototype.filter;\n      // NodeList.prototype.map = Array.prototype.map;\n      // const initialScripts = scriptTags\n      //   .filter(s => !!s.src)\n      //   .map(s => s.src.split('?')[0])\n      //   .reduce((memo, script) => {\n      //     memo[script] = script;\n      //     return memo;\n      //   }, {});\n\n\n      Object.keys(scripts).forEach(function (key) {\n        var script = scripts[key];\n        var tag = window._scriptMap.has(key) ? window._scriptMap.get(key).tag : Cache._scriptTag(key, script);\n        Cache[key] = {\n          tag: tag,\n          onLoad: Cache._onLoad(key)\n        };\n      });\n      return Cache;\n    };\n  }(window);\n\n  exports.default = ScriptCache;\n});","map":{"version":3,"names":["global","factory","define","amd","exports","require","mod","windowOrGlobal","ScriptCache","window","Object","defineProperty","value","counter","scriptMap","_scriptMap","Map","scripts","Cache","_onLoad","key","cb","registered","unregister","stored","get","promise","then","error","catch","_scriptTag","src","has","document","tag","createElement","Promise","resolve","reject","body","getElementsByTagName","type","async","cbName","Date","now","handleResult","state","evt","resolved","errored","loaded","cleanup","onload","onerror","onreadystatechange","readyState","match","replace","addEventListener","appendChild","initialState","set","keys","forEach","script","onLoad","default"],"sources":["C:/Users/Vinay Singh/Desktop/grani/node_modules/google-maps-react/dist/lib/ScriptCache.js"],"sourcesContent":["(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports', './windowOrGlobal'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports, require('./windowOrGlobal'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports, global.windowOrGlobal);\n        global.ScriptCache = mod.exports;\n    }\n})(this, function (exports, window) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n    var counter = 0;\n    var scriptMap = typeof window !== 'undefined' && window._scriptMap || new Map();\n    var ScriptCache = exports.ScriptCache = function (global) {\n        global._scriptMap = global._scriptMap || scriptMap;\n        return function ScriptCache(scripts) {\n            var Cache = {};\n\n            Cache._onLoad = function (key) {\n                return function (cb) {\n                    var registered = true;\n\n                    function unregister() {\n                        registered = false;\n                    }\n\n                    var stored = scriptMap.get(key);\n\n                    if (stored) {\n                        stored.promise.then(function () {\n                            if (registered) {\n                                stored.error ? cb(stored.error) : cb(null, stored);\n                            }\n\n                            return stored;\n                        }).catch(function (error) {\n                            return cb(error);\n                        });\n                    } else {\n                        // TODO:\n                    }\n\n                    return unregister;\n                };\n            };\n\n            Cache._scriptTag = function (key, src) {\n                if (!scriptMap.has(key)) {\n                    // Server side rendering environments don't always have access to the `document` global.\n                    // In these cases, we're not going to be able to return a script tag, so just return null.\n                    if (typeof document === 'undefined') return null;\n\n                    var tag = document.createElement('script');\n                    var promise = new Promise(function (resolve, reject) {\n                        var body = document.getElementsByTagName('body')[0];\n\n                        tag.type = 'text/javascript';\n                        tag.async = false; // Load in order\n\n                        var cbName = 'loaderCB' + counter++ + Date.now();\n                        var cb = void 0;\n\n                        var handleResult = function handleResult(state) {\n                            return function (evt) {\n                                var stored = scriptMap.get(key);\n                                if (state === 'loaded') {\n                                    stored.resolved = true;\n                                    resolve(src);\n                                    // stored.handlers.forEach(h => h.call(null, stored))\n                                    // stored.handlers = []\n                                } else if (state === 'error') {\n                                    stored.errored = true;\n                                    // stored.handlers.forEach(h => h.call(null, stored))\n                                    // stored.handlers = [];\n                                    reject(evt);\n                                }\n                                stored.loaded = true;\n\n                                cleanup();\n                            };\n                        };\n\n                        var cleanup = function cleanup() {\n                            if (global[cbName] && typeof global[cbName] === 'function') {\n                                global[cbName] = null;\n                                delete global[cbName];\n                            }\n                        };\n\n                        tag.onload = handleResult('loaded');\n                        tag.onerror = handleResult('error');\n                        tag.onreadystatechange = function () {\n                            handleResult(tag.readyState);\n                        };\n\n                        // Pick off callback, if there is one\n                        if (src.match(/callback=CALLBACK_NAME/)) {\n                            src = src.replace(/(callback=)[^\\&]+/, '$1' + cbName);\n                            cb = window[cbName] = tag.onload;\n                        } else {\n                            tag.addEventListener('load', tag.onload);\n                        }\n                        tag.addEventListener('error', tag.onerror);\n\n                        tag.src = src;\n                        body.appendChild(tag);\n\n                        return tag;\n                    });\n                    var initialState = {\n                        loaded: false,\n                        error: false,\n                        promise: promise,\n                        tag: tag\n                    };\n                    scriptMap.set(key, initialState);\n                }\n                return scriptMap.get(key).tag;\n            };\n\n            // let scriptTags = document.querySelectorAll('script')\n            //\n            // NodeList.prototype.filter = Array.prototype.filter;\n            // NodeList.prototype.map = Array.prototype.map;\n            // const initialScripts = scriptTags\n            //   .filter(s => !!s.src)\n            //   .map(s => s.src.split('?')[0])\n            //   .reduce((memo, script) => {\n            //     memo[script] = script;\n            //     return memo;\n            //   }, {});\n\n            Object.keys(scripts).forEach(function (key) {\n                var script = scripts[key];\n\n                var tag = window._scriptMap.has(key) ? window._scriptMap.get(key).tag : Cache._scriptTag(key, script);\n\n                Cache[key] = {\n                    tag: tag,\n                    onLoad: Cache._onLoad(key)\n                };\n            });\n\n            return Cache;\n        };\n    }(window);\n\n    exports.default = ScriptCache;\n});"],"mappings":"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"},"metadata":{},"sourceType":"script"}