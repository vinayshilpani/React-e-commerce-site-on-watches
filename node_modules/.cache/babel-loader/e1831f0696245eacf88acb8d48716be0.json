{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.areBoundsEqual = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n  /**\n   * Compares two bound objects.\n   */\n\n\n  var areBoundsEqual = exports.areBoundsEqual = function areBoundsEqual(boundA, boundB) {\n    if (boundA === boundB) {\n      return true;\n    }\n\n    if (!(boundA instanceof Object) || !(boundB instanceof Object)) {\n      return false;\n    }\n\n    if (Object.keys(boundA).length !== Object.keys(boundB).length) {\n      return false;\n    }\n\n    if (!areValidBounds(boundA) || !areValidBounds(boundB)) {\n      return false;\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = Object.keys(boundA)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var key = _step.value;\n\n        if (boundA[key] !== boundB[key]) {\n          return false;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Helper that checks whether an array consists of objects\n   * with lat and lng properties\n   * @param {object} elem the element to check\n   * @returns {boolean} whether or not it's valid\n   */\n\n\n  var areValidBounds = function areValidBounds(elem) {\n    return elem !== null && (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) === 'object' && elem.hasOwnProperty('north') && elem.hasOwnProperty('south') && elem.hasOwnProperty('east') && elem.hasOwnProperty('west');\n  };\n});","map":{"version":3,"names":["global","factory","define","amd","exports","mod","areBoundsEqual","Object","defineProperty","value","_typeof","Symbol","iterator","obj","constructor","prototype","boundA","boundB","keys","length","areValidBounds","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","_step","next","done","key","err","return","elem","hasOwnProperty"],"sources":["C:/Users/Vinay Singh/Desktop/grani/node_modules/google-maps-react/dist/lib/areBoundsEqual.js"],"sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.areBoundsEqual = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  /**\n   * Compares two bound objects.\n   */\n\n  var areBoundsEqual = exports.areBoundsEqual = function areBoundsEqual(boundA, boundB) {\n    if (boundA === boundB) {\n      return true;\n    }\n    if (!(boundA instanceof Object) || !(boundB instanceof Object)) {\n      return false;\n    }\n    if (Object.keys(boundA).length !== Object.keys(boundB).length) {\n      return false;\n    }\n    if (!areValidBounds(boundA) || !areValidBounds(boundB)) {\n      return false;\n    }\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = Object.keys(boundA)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var key = _step.value;\n\n        if (boundA[key] !== boundB[key]) {\n          return false;\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Helper that checks whether an array consists of objects\n   * with lat and lng properties\n   * @param {object} elem the element to check\n   * @returns {boolean} whether or not it's valid\n   */\n  var areValidBounds = function areValidBounds(elem) {\n    return elem !== null && (typeof elem === 'undefined' ? 'undefined' : _typeof(elem)) === 'object' && elem.hasOwnProperty('north') && elem.hasOwnProperty('south') && elem.hasOwnProperty('east') && elem.hasOwnProperty('west');\n  };\n});"],"mappings":"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"},"metadata":{},"sourceType":"script"}